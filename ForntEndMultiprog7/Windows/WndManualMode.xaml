<Window x:Class="FrontEndMultiprog7.Windows.WndManualMode"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FrontEndMultiprog7.Windows"
        mc:Ignorable="d"
        WindowStyle="None" 
        Title="WndManualMode" Height="201" Width="600">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="32" ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
    </WindowChrome.WindowChrome>
    <Grid Background="#F6F6F6">
        <Grid.RowDefinitions>
            <RowDefinition Height="38"></RowDefinition>
            <RowDefinition Height="10"></RowDefinition>
            <RowDefinition Height="10"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>



            <Label
		        Grid.Column="1"
		        Margin="30 0 0 0"
		        VerticalAlignment="Center"
		        FontSize="14"
                Foreground="#4F4F4F"
		        Content="Ручной режим">
                <Label.Style>
                    <Style TargetType="Label">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsActive, 
                                                           RelativeSource={RelativeSource AncestorType=Window}}" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource WindowTitleBarInactiveText}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Label.Style>
            </Label>

            <Button
                x:Name="BtnMinimezeBox"
	            Grid.Column="2"
                Content="–"
                FontSize="28"
                FontWeight="Bold"
                Width="45"
                Height="45"
                BorderThickness="0"  
                Foreground="#828282"
                Click="BtnMinimezeBox_Click">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#D0011B"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="#828282"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Triggers>
                    <EventTrigger RoutedEvent="MouseLeave">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation 
                                            AutoReverse="False" 
                                            Duration="0:0:1" 
                                            From="#D0011B" To="Transparent"
                                            AccelerationRatio="1" 
                                            Storyboard.TargetProperty="(StackPanel.Background).(SolidColorBrush.Color)"
                                            FillBehavior="HoldEnd">
                                    </ColorAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Button.Triggers>

            </Button>


            <Button
                x:Name="BtnCloseBox"
		        Grid.Column="4"
                Content="✖"
                FontSize="12"
                Width="45"
                Height="45"
                Foreground="#828282"
                BorderThickness="0"
                Click="BtnCloseBox_Click">
                <Button.Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#D0011B"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="False">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="#828282"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Triggers>
                    <EventTrigger RoutedEvent="MouseLeave">
                        <EventTrigger.Actions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation 
                                              AutoReverse="False" 
                                              Duration="0:0:1" 
                                              From="#D0011B" To="Transparent"
                                              AccelerationRatio="1" 
                                              Storyboard.TargetProperty="(StackPanel.Background).(SolidColorBrush.Color)"
                                              FillBehavior="HoldEnd">
                                    </ColorAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Button.Triggers>
            </Button>

            <Border BorderThickness="2" BorderBrush="#EAEEF1" Grid.Row="1" Grid.ColumnSpan="4">
            </Border>

            <Border BorderThickness="0,0,0,1" BorderBrush="#EAEEF1" Grid.Row="2" Grid.ColumnSpan="4">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="10" Opacity="0.5"></DropShadowEffect>
                </Border.Effect>
            </Border>

        </Grid>
        <ListView
                x:Name="LVCanDevList"
                BorderThickness="0"  
                Margin="5"
            Background="{x:Null}"
                Grid.Row="3">
            <ListView.View>
                <GridView>
                    <GridViewColumn>
                        <GridViewColumn.HeaderContainerStyle>
                            <Style  TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource ManualMode}">
                                <Setter Property="Content" Value="Наименование"/>
                                <Setter Property="Width" Value="150"/>
                            </Style>
                        </GridViewColumn.HeaderContainerStyle>
                    </GridViewColumn>

                    <GridViewColumn>
                        <GridViewColumn.HeaderContainerStyle>
                            <Style  TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource ManualMode}">
                                <Setter Property="Content" Value="Прошивка"/>
                                <Setter Property="Width" Value="100"/>
                            </Style>
                        </GridViewColumn.HeaderContainerStyle>
                    </GridViewColumn>
                    <GridViewColumn>
                        <GridViewColumn.HeaderContainerStyle>
                            <Style  TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource ManualMode}">
                                <Setter Property="Content" Value="Дата"/>
                                <Setter Property="Width" Value="100"/>
                            </Style>
                        </GridViewColumn.HeaderContainerStyle>
                    </GridViewColumn>

                    <GridViewColumn>
                        <GridViewColumn.HeaderContainerStyle>
                            <Style  TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource ManualMode}">
                                <Setter Property="Content" Value="Время"/>
                                <Setter Property="Width" Value="100"/>
                                
                            </Style>
                        </GridViewColumn.HeaderContainerStyle>
                    </GridViewColumn>

                    <GridViewColumn>
                        <GridViewColumn.HeaderContainerStyle>
                            <Style  TargetType="{x:Type GridViewColumnHeader}" BasedOn="{StaticResource ManualMode}">
                                <Setter Property="Content" Value="Исполнение"/>
                                <Setter Property="Width" Value="150"/>
                            </Style>
                        </GridViewColumn.HeaderContainerStyle>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Foreground" Value="#486FEF"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Background" Value="{x:Null}"/>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

    </Grid>

</Window>
